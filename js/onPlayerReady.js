import { narrar } from './narrativa.js';
import { mostrarNotificacao } from './utils.js';
import { trackProgress } from './trackProgress.js';

export function onPlayerReady(event) {
  // üîê Timeout de seguran√ßa
  window.timeoutProgressoInicial = setTimeout(() => {
    if (!window.progressoIniciado && !window.aulaFinalizada) {
      narrar("‚õî O progresso do v√≠deo ainda **n√£o come√ßou a ser registrado** ap√≥s 30 segundos. Isso pode indicar um erro no player ou no Supabase.", "error");
      mostrarNotificacao("‚ùó Progresso n√£o est√° sendo salvo. Verifique sua conex√£o ou recarregue a p√°gina.");
    }
  }, 30000);

  console.log('üé¨ Player pronto, iniciando monitoramento...');

  if (!window.player || typeof window.player.getDuration !== 'function') {
    console.warn('‚ö†Ô∏è Player inv√°lido, tentando novamente...');
    setTimeout(() => onPlayerReady(event), 300);
    return;
  }

  window.duration = window.player.getDuration();
  console.log('‚è±Ô∏è Dura√ß√£o total do v√≠deo:', window.duration);

  // ‚è© Se houver ponto salvo, pula para l√°
  if (window.pontoRetomada !== null) {
    console.log('‚è© Retomando do ponto salvo:', window.pontoRetomada);
    window.player.seekTo(window.pontoRetomada, true);
  }

  // ‚ñ∂Ô∏è Sempre tenta iniciar o v√≠deo, independentemente do ponto
  try {
    window.player.playVideo?.();
    narrar("‚ñ∂Ô∏è Reproduzindo v√≠deo automaticamente...", "info");
  } catch (e) {
    console.warn("‚ö†Ô∏è Erro ao tentar reproduzir o v√≠deo:", e);
    mostrarNotificacao("‚ö†Ô∏è Falha ao iniciar o v√≠deo automaticamente. Reproduza manualmente.");
  }

  // ‚ôªÔ∏è Limpa rastreamento anterior
  if (window.interval) clearInterval(window.interval);

  // ‚è±Ô∏è Inicia novo ciclo de rastreamento
  window.interval = setInterval(trackProgress, 5000);
}
