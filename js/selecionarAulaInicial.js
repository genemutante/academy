export function selecionarAulaInicial(aulas, user_id) {
  console.groupCollapsed("üß≠ [selecionarAulaInicial] Iniciando sele√ß√£o da aula inicial");

  console.log("üìã Aulas recebidas:", aulas.length);
  console.table(aulas.map((a, i) => ({
    Ordem: i + 1,
    ID: a.id,
    T√≠tulo: a.title,
    Status: a.status,
    QuizEnviado: a.quizEnviado
  })));

  const emAndamento = aulas.find(a => a.status === 'üïí Em andamento');
  if (emAndamento) {
    console.log("üîÑ Aula em andamento encontrada:", emAndamento.title, `(ID: ${emAndamento.id})`);
    selecionarAula(emAndamento, user_id);
    narrar(`üìå Aula em andamento detectada: "${emAndamento.title}". Reabrindo automaticamente.`, "info");
    console.groupEnd();
    return;
  } else {
    console.log("‚ùå Nenhuma aula em andamento");
  }

  const proxima = aulas.find(a => !(a.status === '‚úî Conclu√≠da' && a.quizEnviado));
  if (proxima) {
    console.log("‚û°Ô∏è Pr√≥xima aula desbloqueada identificada:", proxima.title, `(ID: ${proxima.id})`);
    selecionarAula(proxima, user_id);
    narrar(`üöÄ Iniciando pr√≥xima aula desbloqueada: "${proxima.title}"`, "info");
    console.groupEnd();
    return;
  } else {
    console.log("‚ùå Nenhuma pr√≥xima aula desbloqueada dispon√≠vel");
  }

  const ultimaConcluida = [...aulas].reverse().find(a => a.status === '‚úî Conclu√≠da');
  if (ultimaConcluida) {
    console.log("‚úÖ Todas conclu√≠das. √öltima aula ser√° reexibida:", ultimaConcluida.title, `(ID: ${ultimaConcluida.id})`);
    selecionarAula(ultimaConcluida, user_id);
    narrar(`üéâ Todas as aulas e quizzes foram conclu√≠dos! √öltima aula foi: "${ultimaConcluida.title}"`, "success");
    console.groupEnd();
    return;
  } else {
    console.log("‚ùå Nenhuma aula conclu√≠da detectada");
  }

  console.warn("‚ö†Ô∏è Nenhuma aula dispon√≠vel para sele√ß√£o.");
  narrar("‚ö†Ô∏è Nenhuma aula dispon√≠vel para sele√ß√£o.", "warning");
  console.groupEnd();
}
